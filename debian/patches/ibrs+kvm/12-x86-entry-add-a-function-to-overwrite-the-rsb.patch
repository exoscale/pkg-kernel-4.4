From: Borislav Petkov <bp@suse.de>
Date: Sat, 16 Dec 2017 18:45:35 +0100
Subject: x86/entry: Add a function to overwrite the RSB
Patch-mainline: submitted on 2018/1/9
References: bsc#1068032

Fill up the 32-entry Return Stack Buffer.

Carved out from a patch by Tim Chen <tim.c.chen@linux.intel.com>

Signed-off-by: Borislav Petkov <bp@suse.de>
---
 arch/x86/entry/entry_64.S        | 70 ++++++++++++++++++++++++++++++++++++++++
 arch/x86/include/asm/spec_ctrl.h |  4 +++
 2 files changed, 74 insertions(+)

Index: kernel/arch/x86/entry/entry_64.S
===================================================================
--- kernel.orig/arch/x86/entry/entry_64.S
+++ kernel/arch/x86/entry/entry_64.S
@@ -1640,3 +1640,73 @@ ENTRY(ignore_sysret)
 	mov	$-ENOSYS, %eax
 	sysret
 END(ignore_sysret)
+
+ENTRY(stuff_rsb)
+	call	1f
+	pause
+1:	call	2f
+	pause
+2:	call	3f;
+	pause
+3:	call	4f
+	pause
+4:	call	5f
+	pause
+5:	call	6f
+	pause
+6:	call	7f
+	pause
+7:	call	8f
+	pause
+8:	call	9f
+	pause
+9:	call	10f
+	pause
+10:	call	11f
+	pause
+11:	call	12f
+	pause
+12:	call	13f
+	pause
+13:	call	14f
+	pause
+14:	call	15f
+	pause
+15:	call	16f
+	pause
+16:	call	17f
+	pause
+17:	call	18f
+	pause
+18:	call	19f
+	pause
+19:	call	20f
+	pause
+20:	call	21f
+	pause
+21:	call	22f
+	pause
+22:	call	23f
+	pause
+23:	call	24f
+	pause
+24:	call	25f
+	pause
+25:	call	26f
+	pause
+26:	call	27f
+	pause
+27:	call	28f
+	pause
+28:	call	29f
+	pause
+29:	call	30f
+	pause
+30:	call	31f
+	pause
+31:	call	32f
+	pause
+32:
+	add $(32*8), %rsp
+	ret
+END(stuff_rsb)
Index: kernel/arch/x86/include/asm/spec_ctrl.h
===================================================================
--- kernel.orig/arch/x86/include/asm/spec_ctrl.h
+++ kernel/arch/x86/include/asm/spec_ctrl.h
@@ -50,6 +50,10 @@
 .Lend_\@:
 .endm
 
+.macro STUFF_RSB
+	ALTERNATIVE "call stuff_rsb", "", X86_FEATURE_SMEP
+.endm
+
 #else /* __ASSEMBLY__ */
 void x86_enable_ibrs(void);
 void x86_disable_ibrs(void);
